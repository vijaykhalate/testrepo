# This workflow will install Python dependencies, run tests, and lint with a variety of Python versions
# For more information, see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  schedule:
    - cron: '* * * * *'
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  api-automation:
    name: API Automation
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install pytest
          python -m pip install requests
      - name: Test with pytest
        run: |
          pytest gorest_apis.py --junitxml=report.xml

      - name: Upload Test Report
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: report.xml  # Path to the test report

  robot-framework-tests:
    name: Robot Framework Tests
    timeout-minutes: 600
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - container: 'ppodgorsek/robot-framework'
            browser: 'chrome'

    container:
      image: ${{matrix.container}}
      options: "--entrypoint /bin/bash --user root --shm-size=2gb"

    env:
      BROWSER: ${{matrix.browser}}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3


    - name: Copy Other Robot Files
      # Build your program with the given configuration
      run: cp -r  ./ /opt/robotframework

    - name: Run Test Cases
      run: |
        cd /
        /opt/robotframework/bin/run-tests-in-virtual-screen.sh
        #To increase robot threads append "ROBOT_THREADS=4" before above line.

    - name: Test with robot
      run: |
        robot SpeedTests.robot    











































#    timeout-minutes: 600
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        include:
#          - container: 'ppodgorsek/robot-framework'
#            browser: 'chrome'
#
#    container:
#      image: ${{ matrix.container }}
#      options: "--entrypoint /bin/bash --user root --shm-size=2gb"
#
#    env:
#      BROWSER: ${{ matrix.browser }}
#
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v3
#
#      - name: Install dependencies
#        run: |
#          pip3 install selenium
#          pip3 install robotframework
#          pip3 install robotframework-seleniumlibrary
#
#
#      - name: Install Chrome and ChromeDriver inside container
#        run: |
#          # Download Google Chrome tarball
#          wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.tar.gz
#
#          # Extract the tarball to /opt/google/chrome
#          mkdir -p /opt/google/chrome
#          tar -xvzf google-chrome-stable_current_amd64.tar.gz -C /opt/google/chrome
#
#          # Clean up the tarball
#          rm google-chrome-stable_current_amd64.tar.gz
#
#          # Get the installed Chrome version
#          CHROME_VERSION=$(ls /opt/google/chrome | grep -oP '\d+\.\d+\.\d+')
#
#          # Download ChromeDriver matching the version of Chrome installed
#          CHROMEDRIVER_VERSION=$(curl -s "https://chromedriver.storage.googleapis.com/LATEST_RELEASE_$CHROME_VERSION")
#          wget "https://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip"
#          unzip chromedriver_linux64.zip -d /usr/local/bin/
#          rm chromedriver_linux64.zip
#
#      - name: Test with robot
#        run: |
#          robot SpeedTests.robot


## This workflow will install Python dependencies, run tests, and lint with a variety of Python versions
## For more information, see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python
#
#name: Python package
#
#on:
#  schedule:
#    - cron: '* * * * *'
#  push:
#    branches: [ "main" ]
#
#
#jobs:
#  build:
#    name : api-automation
#    runs-on: ubuntu-latest
#    strategy:
#      fail-fast: false
#      matrix:
#        python-version: ["3.10"]
#
#    steps:
#      - uses: actions/checkout@v4
#      - name: Set up Python ${{ matrix.python-version }}
#        uses: actions/setup-python@v3
#        with:
#          python-version: ${{ matrix.python-version }}
#
#      - name: Install dependencies
#        run: |
#          python -m pip install --upgrade pip
#          python -m pip install pytest
#          python -m pip install requests
#      - name: Test with pytest
#        run: |
#          pytest gorest_apis.py
#
#  robot-framework-test:
#    name: robot framework test
#    timeout-minutes: 600
#    runs-on: ubuntu-latest
#    strategy:
#      fail-fast: false
#      matrix:
#        include:
#            browser: 'chrome'
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v4
#      - name: Install dependencies
#        run: |
#          pip3 install selenium
#          pip3 install robotframework
#          pip3 install robotframework-seleniumlibrary
#
#      - name: Test with pytest
#        run: |
#          robot SpeedTests.robot