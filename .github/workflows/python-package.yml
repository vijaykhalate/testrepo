# This workflow will install Python dependencies, run tests, and lint with a variety of Python versions
# For more information, see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python
name: Python package
on:
  schedule:
    - cron: '* * * * *'
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
jobs:
  api-automation:
    name: API Automation
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install pytest
          python -m pip install requests
      - name: Test with pytest
        run: |
          pytest gorest_apis.py --junitxml=report.xml
      - name: Upload Test Report
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: report.xml  # Path to the test report

  robot-framework-tests:
    name: Robot Framework Tests
    timeout-minutes: 600
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'

      - name: Install ChromeDriver
        run: |
          # Display full Chrome version output for debugging
          FULL_CHROME_VERSION=$(google-chrome --version)
          echo "Full Chrome version output: '$FULL_CHROME_VERSION'"
          
          # Attempt to get a matching ChromeDriver version
          CHROME_VERSION=$(echo "$FULL_CHROME_VERSION" | grep -oP '(\d+\.\d+)' | head -n 1)
          CHROMEDRIVER_VERSION=$(curl -s "https://chromedriver.storage.googleapis.com/LATEST_RELEASE_$CHROME_VERSION")

          # Check if a matching ChromeDriver version was found
          if [ -z "$CHROMEDRIVER_VERSION" ]; then
            echo "No exact ChromeDriver match found for Chrome version $CHROME_VERSION, using latest ChromeDriver version instead."
            CHROMEDRIVER_VERSION=$(curl -s "https://chromedriver.storage.googleapis.com/LATEST_RELEASE")
          fi

          echo "Installing ChromeDriver version: $CHROMEDRIVER_VERSION"
          
          # Download and install ChromeDriver
          wget -N "https://chromedriver.storage.googleapis.com/${CHROMEDRIVER_VERSION}/chromedriver_linux64.zip" || exit 1
          unzip chromedriver_linux64.zip -d /usr/local/bin/ || exit 1
          rm chromedriver_linux64.zip

      - name: Run Robot Framework UI tests
        env:
          ROBOT_BROWSER: Chrome
        run: |
          robot SpeedTests.robot

      - name: Upload Robot Framework results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: robot-results
          path: output.xml
































#    timeout-minutes: 600
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        include:
#          - container: 'ppodgorsek/robot-framework'
#            browser: 'chrome'
#
#    container:
#      image: ${{ matrix.container }}
#      options: "--entrypoint /bin/bash --user root --shm-size=2gb"
#
#    env:
#      BROWSER: ${{ matrix.browser }}
#
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v3
#
#      - name: Install dependencies
#        run: |
#          pip3 install selenium
#          pip3 install robotframework
#          pip3 install robotframework-seleniumlibrary
#
#
#      - name: Install Chrome and ChromeDriver inside container
#        run: |
#          # Download Google Chrome tarball
#          wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.tar.gz
#
#          # Extract the tarball to /opt/google/chrome
#          mkdir -p /opt/google/chrome
#          tar -xvzf google-chrome-stable_current_amd64.tar.gz -C /opt/google/chrome
#
#          # Clean up the tarball
#          rm google-chrome-stable_current_amd64.tar.gz
#
#          # Get the installed Chrome version
#          CHROME_VERSION=$(ls /opt/google/chrome | grep -oP '\d+\.\d+\.\d+')
#
#          # Download ChromeDriver matching the version of Chrome installed
#          CHROMEDRIVER_VERSION=$(curl -s "https://chromedriver.storage.googleapis.com/LATEST_RELEASE_$CHROME_VERSION")
#          wget "https://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip"
#          unzip chromedriver_linux64.zip -d /usr/local/bin/
#          rm chromedriver_linux64.zip
#
#      - name: Test with robot
#        run: |
#          robot SpeedTests.robot


## This workflow will install Python dependencies, run tests, and lint with a variety of Python versions
## For more information, see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python
#
#name: Python package
#
#on:
#  schedule:
#    - cron: '* * * * *'
#  push:
#    branches: [ "main" ]
#
#
#jobs:
#  build:
#    name : api-automation
#    runs-on: ubuntu-latest
#    strategy:
#      fail-fast: false
#      matrix:
#        python-version: ["3.10"]
#
#    steps:
#      - uses: actions/checkout@v4
#      - name: Set up Python ${{ matrix.python-version }}
#        uses: actions/setup-python@v3
#        with:
#          python-version: ${{ matrix.python-version }}
#
#      - name: Install dependencies
#        run: |
#          python -m pip install --upgrade pip
#          python -m pip install pytest
#          python -m pip install requests
#      - name: Test with pytest
#        run: |
#          pytest gorest_apis.py
#
#  robot-framework-test:
#    name: robot framework test
#    timeout-minutes: 600
#    runs-on: ubuntu-latest
#    strategy:
#      fail-fast: false
#      matrix:
#        include:
#            browser: 'chrome'
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v4
#      - name: Install dependencies
#        run: |
#          pip3 install selenium
#          pip3 install robotframework
#          pip3 install robotframework-seleniumlibrary
#
#      - name: Test with pytest
#        run: |
#          robot SpeedTests.robot